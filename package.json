{
  "name": "flapi-starterkit-frontend",
  "version": "0.0.0",
  "private": true,
  "type": "module",
  "scripts": {
    "web:run:dev:local": "nuxi dev --dotenv .env.development --open --no-clear --clipboard --port=1460",
    "web:run:dev:remote": "nuxi dev --dotenv .env.development-remote --open --no-clear --clipboard --port=1460",
    "web:run:dev:docker:local": "cross-env ENV_MODE=local docker-compose up",
    "web:run:dev:docker:remote": "cross-env ENV_MODE=remote docker-compose up",
    "web:build:static:dev": "nuxi generate --dotenv .env.development",
    "web:build:static:dev-remote": "nuxi generate --dotenv .env.development-remote",
    "web:build:static:staging": "nuxi generate --dotenv .env.staging",
    "web:build:static:prod": "nuxi generate --dotenv .env.production",
    "web:build:server:dev": "nuxi build --dotenv .env.development",
    "web:build:server:dev-remote": "nuxi build --dotenv .env.development-remote",
    "web:build:server:staging": "nuxi build --dotenv .env.staging",
    "web:build:server:prod": "nuxi build --dotenv .env.production",
    "web:preview:dev": "cross-env PORT=1461 nuxt preview --dotenv .env.development",
    "web:preview:dev-remote": "cross-env PORT=1461 nuxt preview --dotenv .env.development-remote",
    "web:preview:staging": "cross-env PORT=1461 nuxt preview --dotenv .env.staging",
    "web:preview:prod": "cross-env PORT=1461 nuxt preview --dotenv .env.production",
    "web:analyze": "nuxi analyze --loglevel verbose",
    "web:cleanup": "nuxi cleanup",
    "web:prepare": "nuxi prepare",
    "mobile:run:android:device:dev": "npm run web:build:static:dev && cap sync --inline android && cap run android",
    "mobile:run:android:device:dev-remote": "npm run web:build:static:dev-remote && cap sync --inline android && cap run android",
    "mobile:run:android:device:staging": "npm run web:build:static:staging && cap sync --inline android && cap run android",
    "mobile:run:android:device:prod": "npm run web:build:static:prod && cap sync --inline android && cap run android",
    "mobile:run:android:emulator:dev": "npm run web:build:static:dev && cap sync --inline android && cap open android",
    "mobile:run:android:emulator:dev-remote": "npm run web:build:static:dev-remote && cap sync --inline android && cap open android",
    "mobile:run:android:emulator:staging": "npm run web:build:static:staging && cap sync --inline android && cap open android",
    "mobile:run:android:emulator:prod": "npm run web:build:static:prod && cap sync --inline android && cap open android",
    "mobile:run:ios:device:dev": "npm run web:build:static:dev && cap sync --inline ios && cap run ios",
    "mobile:run:ios:device:dev-remote": "npm run web:build:static:dev-remote && cap sync --inline ios && cap run ios",
    "mobile:run:ios:device:staging": "npm run web:build:static:staging && cap sync --inline ios && cap run ios",
    "mobile:run:ios:device:prod": "npm run web:build:static:prod && cap sync --inline ios && cap run ios",
    "mobile:run:ios:emulator:dev": "npm run web:build:static:dev && cap sync --inline ios && cap open ios",
    "mobile:run:ios:emulator:dev-remote": "npm run web:build:static:dev-remote && cap sync --inline ios && cap open ios",
    "mobile:run:ios:emulator:staging": "npm run web:build:static:staging && cap sync --inline ios && cap open ios",
    "mobile:run:ios:emulator:prod": "npm run web:build:static:prod && cap sync --inline ios && cap open ios",
    "mobile:build:android:dev": "npm run web:build:static:dev && cap sync --inline android && cap build android",
    "mobile:build:android:dev-remote": "npm run web:build:static:dev-remote && cap sync --inline android && cap build android",
    "mobile:build:android:staging": "npm run web:build:static:staging && cap sync android && cap build android",
    "mobile:build:android:prod": "npm run web:build:static:prod && cap sync android && cap build android",
    "mobile:build:ios:dev": "npm run web:build:static:dev && cap sync --inline ios && cap build ios",
    "mobile:build:ios:dev-remote": "npm run web:build:static:dev-remote && cap sync --inline ios && cap build ios",
    "mobile:build:ios:staging": "npm run web:build:static:staging && cap sync ios && cap build ios",
    "mobile:build:ios:prod": "npm run web:build:static:prod && cap sync ios && cap build ios",
    "mobile:generate:icons-splash": "capacitor-assets generate --ios --android",
    "desktop:run:dev": "npm run bash:format && npx kill-port 1460 && cross-env RUST_BACKTRACE=1 tauri dev",
    "desktop:check:compile": "cd src-tauri && cargo check",
    "desktop:build:windows:x64": "npm run bash:format && tauri build --target x86_64-pc-windows-msvc",
    "desktop:build:windows:arm64": "npm run bash:format && tauri build --target aarch64-pc-windows-msvc",
    "desktop:build:macos:x86_64": "npm run bash:format && tauri build --target x86_64-apple-darwin",
    "desktop:build:macos:arm64": "npm run bash:format && tauri build --target aarch64-apple-darwin",
    "desktop:build:macos:universal": "npm run bash:format && tauri build --target universal-apple-darwin",
    "desktop:build:linux:x86_64": "npm run bash:format && tauri build --target x86_64-unknown-linux-gnu",
    "desktop:build:linux:arm64": "npm run bash:format && tauri build --target aarch64-unknown-linux-gnu",
    "desktop:install:target:windows": "rustup target add x86_64-pc-windows-msvc && rustup target add aarch64-pc-windows-msvc",
    "desktop:install:target:macos": "rustup target add aarch64-apple-darwin && rustup target add x86_64-apple-darwin",
    "desktop:install:target:linux": "rustup target add x86_64-unknown-linux-gnu && rustup target add aarch64-unknown-linux-gnu",
    "test:unit:dev": "vitest watch --coverage",
    "test:unit:dev:gui": "vitest watch --ui --coverage",
    "test:unit:staging-prod": "vitest run --coverage",
    "test:e2e:dev:chrome": "npm run web:build:static:dev && npm-run-all2 --parallel web:preview cypress-run-chrome",
    "test:e2e:dev:firefox": "npm run web:build:static:dev && npm-run-all2 --parallel web:preview cypress-run-firefox",
    "test:e2e:dev:edge": "npm run web:build:static:dev && npm-run-all2 --parallel web:preview cypress-run-edge",
    "test:e2e:dev:gui:chrome": "npm run web:build:static:dev && npm-run-all2 --parallel web:preview cypress-open-chrome",
    "test:e2e:dev:gui:firefox": "npm run web:build:static:dev && npm-run-all2 --parallel web:preview cypress-open-firefox",
    "test:e2e:dev:gui:edge": "npm run web:build:static:dev && npm-run-all2 --parallel web:preview cypress-open-edge",
    "cypress-open-chrome": "cypress open --browser chrome --e2e --config-file cypress.config.ts",
    "cypress-open-firefox": "cypress open --browser firefox --e2e --config-file cypress.config.ts",
    "cypress-open-edge": "cypress open --browser edge --e2e --config-file cypress.config.ts",
    "cypress-run-chrome": "cypress run --browser chrome --e2e --config-file cypress.config.ts",
    "cypress-run-firefox": "cypress run --browser firefox --e2e --config-file cypress.config.ts",
    "cypress-run-edge": "cypress run --browser edge --e2e --config-file cypress.config.ts",
    "lint": "npm run lint:prettier && npm run lint:eslint && npm run lint:ts",
    "lint:prettier": "prettier --check .",
    "lint:eslint": "eslint .",
    "lint:ts": "vue-tsc --noEmit",
    "lint:fix": "prettier --write --list-different . && npm run lint:prettier --fix && npm run lint:eslint --fix",
    "tauri": "tauri",
    "bash:format": "sed -i 's/\\r//' src-tauri/scripts/beforeDevCommand.sh && sed -i 's/\\r//' src-tauri/scripts/beforeBuildCommand.sh",
    "prepare": "husky && nuxi prepare"
  },
  "dependencies": {
    "@capacitor/android": "^7.0.1",
    "@capacitor/app": "^7.0.0",
    "@capacitor/core": "^7.0.1",
    "@capacitor/ios": "^7.0.1",
    "@capacitor/splash-screen": "^7.0.0",
    "@pinia/nuxt": "^0.9.0",
    "@tauri-apps/api": "^2.2.0",
    "@tauri-apps/plugin-shell": "^2.2.0",
    "@tauri-apps/plugin-updater": "^2.3.1",
    "@tuyau/client": "^0.2.4",
    "axios": "^1.7.9",
    "luxon": "^3.5.0",
    "pinia": "^2.3.1",
    "vue": "^3.5.13",
    "vue-router": "^4.5.0"
  },
  "devDependencies": {
    "@capacitor/assets": "^3.0.5",
    "@capacitor/cli": "^7.0.1",
    "@commitlint/cli": "^19.6.1",
    "@commitlint/config-conventional": "^19.6.0",
    "@nuxt/devtools": "^1.7.0",
    "@nuxt/image": "^1.9.0",
    "@nuxt/test-utils": "^3.15.4",
    "@nuxtjs/google-fonts": "^3.2.0",
    "@nuxtjs/seo": "^2.1.0",
    "@nuxtjs/sitemap": "^7.2.3",
    "@nuxtjs/tailwindcss": "^6.13.1",
    "@stylistic/eslint-plugin": "^2.13.0",
    "@tauri-apps/cli": "^2.2.5",
    "@types/jsdom": "^21.1.7",
    "@types/luxon": "^3.4.2",
    "@types/mochawesome": "^6.2.4",
    "@types/node": "^22.10.7",
    "@typescript-eslint/eslint-plugin": "^8.21.0",
    "@typescript-eslint/parser": "^8.21.0",
    "@vitest/coverage-v8": "^3.0.3",
    "@vitest/ui": "^3.0.3",
    "@vue/test-utils": "^2.4.6",
    "autoprefixer": "^10.4.20",
    "cross-env": "^7.0.3",
    "cypress": "^14.0.0",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-import-resolver-typescript": "^3.7.0",
    "eslint-plugin-cypress": "^4.1.0",
    "eslint-plugin-jsdoc": "^50.6.2",
    "eslint-plugin-prettier": "^5.2.3",
    "eslint-plugin-unused-imports": "^4.1.4",
    "eslint-plugin-vue": "^9.32.0",
    "husky": "^9.1.7",
    "jsdom": "^26.0.0",
    "json": "^11.0.0",
    "mochawesome": "^7.1.3",
    "nitropack": "^2.10.4",
    "npm-check-updates": "^17.1.14",
    "npm-run-all2": "^7.0.2",
    "nuxt": "^3.15.2",
    "postcss": "^8.5.1",
    "prettier": "^3.4.2",
    "prettier-plugin-tailwindcss": "^0.6.10",
    "serve": "^14.2.4",
    "typescript": "~5.7.3",
    "vitest": "^3.0.3",
    "vue-eslint-parser": "^9.4.3",
    "vue-tsc": "^2.2.0"
  },
  "engines": {
    "node": ">=22.11.0"
  }
}
